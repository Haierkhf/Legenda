import os
import json
import logging
import requests
import telebot
from flask import Flask, request
from telebot.types import ReplyKeyboardMarkup, KeyboardButton

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.environ.get("BOT_TOKEN")
CRYPTOBOT_API_KEY = os.environ.get("CRYPTOBOT_API_KEY")
ADMIN_ID = os.environ.get("ADMIN_ID")
CRYPTO_PAY_URL = "https://pay.crypt.bot/api/createInvoice"
CRYPTO_BOT_URL = "https://pay.crypt.bot/"


if not BOT_TOKEN or not CRYPTOBOT_API_KEY or not ADMIN_ID:
    raise ValueError("–û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è!")

ADMIN_ID = int(ADMIN_ID)
bot = telebot.TeleBot(BOT_TOKEN)

# –§–∞–π–ª —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
USERS_FILE = "users.json"

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ —Ñ–∞–π–ª–∞ (–µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
if os.path.exists(USERS_FILE):
    with open(USERS_FILE, "r", encoding="utf-8") as file:
        users = json.load(file)
else:
    users = {}  # –ï—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π —Å–ª–æ–≤–∞—Ä—å

def save_users():
    """–§—É–Ω–∫—Ü–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è users.json"""
    with open(USERS_FILE, "w", encoding="utf-8") as file:
        json.dump(users, file, indent=4, ensure_ascii=False)

def update_user(user_id, key, value):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è"""
    if user_id not in users:
        users[user_id] = {}
    
    users[user_id][key] = value
    save_users()  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è


users = load_users()
app = Flask(__name__)
# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def main_menu():
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = [
        KeyboardButton("ü§ñ –°–æ–∑–¥–∞—Ç—å –±–æ—Ç–∞"),
        KeyboardButton("‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"),
        KeyboardButton("üí¨ –û—Ç–∑—ã–≤—ã"),
        KeyboardButton("üë§ –ü—Ä–æ—Ñ–∏–ª—å")
    ]
    markup.add(*buttons)
    return markup

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=["start"])
def start_handler(message):
    user_id = str(message.from_user.id)

    if user_id not in users:
        users[user_id] = {
            "balance": 0,
            "username": message.from_user.username,
            "chat_id": message.chat.id
        }
        save_users(users)

    bot.send_message(
        message.chat.id,
        "–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=main_menu()
    )
# –ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –±–æ—Ç–∞
def create_bot_menu():
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    options = [
        "üì¢ –ê–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥", "üí≥ –ü—Ä–æ–¥–∞–∂–∞ —Ü–∏—Ñ—Ä–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤", "üìä –ê—Ä–±–∏—Ç—Ä–∞–∂ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç",
        "üñºÔ∏è –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π AI", "üìù –ì–µ–Ω–µ—Ä–∞—Ü–∏—è PDF-–¥–æ–∫—É–º–µ–Ω—Ç–æ–≤",
        "üîó –ü—Ä–æ–¥–∞–∂–∞ –ø–æ–¥–ø–∏—Å–æ–∫", "üîç –ü–æ–∏—Å–∫ airdrop'–æ–≤", "üîí –ü—Ä–æ–¥–∞–∂–∞ VPN/–ø—Ä–æ–∫—Å–∏",
        "üìÖ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ª—É–≥", "üîô –ù–∞–∑–∞–¥"
    ]
    for text in options:
        markup.add(KeyboardButton(text))
    return markup

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–°–æ–∑–¥–∞—Ç—å –±–æ—Ç–∞"
@bot.message_handler(func=lambda message: message.text == "ü§ñ –°–æ–∑–¥–∞—Ç—å –±–æ—Ç–∞")
def handle_create_bot(message):
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –±–æ—Ç–∞:", reply_markup=create_bot_menu())

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –±–æ—Ç–∞
@bot.message_handler(func=lambda message: message.text in [
    "üì¢ –ê–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥", "üí≥ –ü—Ä–æ–¥–∞–∂–∞ —Ü–∏—Ñ—Ä–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤", "üìä –ê—Ä–±–∏—Ç—Ä–∞–∂ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç",
    "üñºÔ∏è –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π AI", "üìù –ì–µ–Ω–µ—Ä–∞—Ü–∏—è PDF-–¥–æ–∫—É–º–µ–Ω—Ç–æ–≤",
    "üîó –ü—Ä–æ–¥–∞–∂–∞ –ø–æ–¥–ø–∏—Å–æ–∫", "üîç –ü–æ–∏—Å–∫ airdrop'–æ–≤", "üîí –ü—Ä–æ–¥–∞–∂–∞ VPN/–ø—Ä–æ–∫—Å–∏",
    "üìÖ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ª—É–≥"
])
def process_bot_type(message):
    user_id = str(message.from_user.id)
    users[user_id]["selected_bot_type"] = message.text
    users[user_id]["state"] = "waiting_for_bot_name"
    save_users(users)

    bot.send_message(message.chat.id, f"–í—ã –≤—ã–±—Ä–∞–ª–∏: {message.text}\n\n–í–≤–µ–¥–∏—Ç–µ –∏–º—è –¥–ª—è –≤–∞—à–µ–≥–æ –±–æ—Ç–∞:")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏ –±–æ—Ç–∞
@bot.message_handler(func=lambda message: users.get(str(message.from_user.id), {}).get("state") == "waiting_for_bot_name")
def process_bot_name(message):
    user_id = str(message.from_user.id)
    users[user_id]["bot_name"] = message.text
    users[user_id]["state"] = "waiting_for_payment"
    save_users(users)

    bot.send_message(
        message.chat.id,
        f"‚úÖ –ò–º—è –±–æ—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: *{message.text}*\n\n"
        "üí∞ –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–ø–ª–∞—Ç–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ.\n"
        "–ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞—à –±–∞–ª–∞–Ω—Å...",
        parse_mode="Markdown"
    )

    check_user_balance(user_id, message.chat.id)
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ –ø–µ—Ä–µ–¥ —Å–æ–∑–¥–∞–Ω–∏–µ–º –±–æ—Ç–∞
def check_user_balance(user_id, chat_id):
    balance = users.get(user_id, {}).get("balance", 0)
    bot_price = 29.99  # –°—Ç–æ–∏–º–æ—Å—Ç—å —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞

    if balance >= bot_price:
        users[user_id]["balance"] -= bot_price
        save_users(users)
        finalize_bot_creation(user_id, chat_id)
    else:
        missing_amount = bot_price - balance
        bot.send_message(chat_id, f"‚ùó –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤. –ù—É–∂–Ω–æ –µ—â–µ {missing_amount} USDT.")
        send_payment_link(user_id, chat_id, missing_amount)


def send_payment_button(chat_id):
    """–§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –æ–ø–ª–∞—Ç—ã"""
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("üí≥ –û–ø–ª–∞—Ç–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞", callback_data="pay_create_bot"))

    bot.send_message(chat_id, "–î–ª—è –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:", reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data == "pay_create_bot")
def process_payment(call):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"""
    user_id = call.from_user.id

    if user_id not in users:
        bot.send_message(call.message.chat.id, "‚ö†Ô∏è –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ.")
        return

    amount = 29.99  # –¶–µ–Ω–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞ –≤ USDT
    payment_url = f"https://pay.crypt.bot/?to=–í–ê–®_–ö–û–®–ï–õ–ï–ö&amount={amount}&currency=USDT"

    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("üîó –û–ø–ª–∞—Ç–∏—Ç—å", url=payment_url))

    bot.send_message(call.message.chat.id, f"üí∞ –î–ª—è –æ–ø–ª–∞—Ç—ã –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ:", reply_markup=markup)
# –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞ –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã
def finalize_bot_creation(user_id, chat_id):
    bot_name = users[user_id].get("bot_name", "–ë–µ–∑ –∏–º–µ–Ω–∏")
    bot_type = users[user_id].get("selected_bot_type", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø")

    bot.send_message(
        chat_id,
        f"‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É!\n\n"
        f"üîπ *–ù–∞–∑–≤–∞–Ω–∏–µ –±–æ—Ç–∞:* {bot_name}\n"
        f"üîπ *–¢–∏–ø:* {bot_type}\n\n"
        f"‚è≥ –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: *–¥–æ 72 —á–∞—Å–æ–≤*.\n"
        f"üîî –í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –∫–æ–≥–¥–∞ –±–æ—Ç –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤!",
        parse_mode="Markdown"
    )

    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
    bot.send_message(
        ADMIN_ID,
        f"üîî *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –±–æ—Ç–∞!*\n\n"
        f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{users[user_id].get('username', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}\n"
        f"üîπ –ù–∞–∑–≤–∞–Ω–∏–µ: {bot_name}\n"
        f"üîπ –¢–∏–ø: {bot_type}\n",
        parse_mode="Markdown"
    )

    users[user_id]["state"] = None
    save_users(users)
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ—Ñ–∏–ª—è
@bot.message_handler(func=lambda message: message.text == "üë§ –ü—Ä–æ—Ñ–∏–ª—å")
def profile_callback(message):
    user_id = str(message.from_user.id)

    if user_id not in users:
        bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞: –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    username = users[user_id].get("username", "–ù–µ —É–∫–∞–∑–∞–Ω")
    balance = users[user_id].get("balance", 0)

    bot.send_message(
        message.chat.id,
        f"üë§ *–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:*\n\n"
        f"üîπ *–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:* @{username}\n"
        f"üí∞ *–ë–∞–ª–∞–Ω—Å:* {balance} USDT",
        parse_mode="Markdown"
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
@bot.message_handler(func=lambda message: message.text == "‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
def info_callback(message):
    info_text = (
        "‚ÑπÔ∏è *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–∏—Å–µ:*\n\n"
        "–ù–∞—à –±–æ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —É–¥–æ–±–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏:\n"
        "- –ê–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥\n"
        "- –ü—Ä–æ–¥–∞–∂–∞ —Ü–∏—Ñ—Ä–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤\n"
        "- –ê—Ä–±–∏—Ç—Ä–∞–∂ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç\n"
        "- –ì–µ–Ω–µ—Ä–∞—Ü–∏—è PDF –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π AI\n"
        "- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∞–º–∏\n\n"
        "üí∞ *–ö–∞–∫ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å?*\n"
        "1. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–°–æ–∑–¥–∞—Ç—å –±–æ—Ç–∞'.\n"
        "2. –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ç–∏–ø –±–æ—Ç–∞.\n"
        "3. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –æ–ø–ª–∞—Ç–µ.\n"
        "4. –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å –æ–±–Ω–æ–≤–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.\n\n"
        "üîí *–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏:*\n"
        "–ú—ã —É–≤–∞–∂–∞–µ–º –≤–∞—à—É –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –∏ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –∑–∞—â–∏—Ç—É –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö."
    )
    bot.send_message(message.chat.id, info_text, parse_mode="Markdown")

# –ö–Ω–æ–ø–∫–∞ "–û—Ç–∑—ã–≤—ã" —Å –∞–∫—Ç—É–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π
@bot.message_handler(func=lambda message: message.text == "üí¨ –û—Ç–∑—ã–≤—ã")
def reviews_callback(message):
    bot.send_message(
        message.chat.id,
        "üí¨ –í—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –∏–ª–∏ –ø—Ä–æ—á–∏—Ç–∞—Ç—å –º–Ω–µ–Ω–∏—è –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–¥–µ—Å—å:\n\n"
        "üëâ [–ü–µ—Ä–µ–π—Ç–∏ –≤ –≥—Ä—É–ø–ø—É –æ—Ç–∑—ã–≤–æ–≤](https://t.me/nWf0L9BBCoJlY2Qy)",
        parse_mode="Markdown",
        disable_web_page_preview=True
    )
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" –≤–µ–∑–¥–µ, –≥–¥–µ —ç—Ç–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è
@bot.message_handler(func=lambda message: message.text == "üîô –ù–∞–∑–∞–¥")
def back_to_main_menu(message):
    bot.send_message(message.chat.id, "üîô –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...", reply_markup=main_menu())

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" –∏–∑ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –±–æ—Ç–∞
@bot.message_handler(func=lambda message: message.text in [
    "üì¢ –ê–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥", "üí≥ –ü—Ä–æ–¥–∞–∂–∞ —Ü–∏—Ñ—Ä–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤", "üìä –ê—Ä–±–∏—Ç—Ä–∞–∂ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç",
    "üñºÔ∏è –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π AI", "üìù –ì–µ–Ω–µ—Ä–∞—Ü–∏—è PDF-–¥–æ–∫—É–º–µ–Ω—Ç–æ–≤",
    "üîó –ü—Ä–æ–¥–∞–∂–∞ –ø–æ–¥–ø–∏—Å–æ–∫", "üîç –ü–æ–∏—Å–∫ airdrop'–æ–≤", "üîí –ü—Ä–æ–¥–∞–∂–∞ VPN/–ø—Ä–æ–∫—Å–∏",
    "üìÖ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ª—É–≥"
])
def back_from_bot_type(message):
    bot.send_message(message.chat.id, "üîô –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –±–æ—Ç–∞...", reply_markup=create_bot_menu())

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" –∏–∑ —ç—Ç–∞–ø–∞ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏ –±–æ—Ç–∞
@bot.message_handler(func=lambda message: users.get(str(message.from_user.id), {}).get("state") == "waiting_for_bot_name")
def back_from_bot_name(message):
    users[str(message.from_user.id)]["state"] = None
    save_users(users)
    bot.send_message(message.chat.id, "üîô –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –±–æ—Ç–∞...", reply_markup=create_bot_menu())

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" –∏–∑ —ç—Ç–∞–ø–∞ –æ–ø–ª–∞—Ç—ã
@bot.message_handler(func=lambda message: users.get(str(message.from_user.id), {}).get("state") == "waiting_for_payment")
def back_from_payment(message):
    users[str(message.from_user.id)]["state"] = None
    save_users(users)
    bot.send_message(message.chat.id, "üîô –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...", reply_markup=main_menu())
if __name__ == "__main__":
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
    bot.polling(none_stop=True)
